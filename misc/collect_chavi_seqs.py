#!/usr/bin/env python2.6

import os, sqlite3, sys

from Bio import Entrez, SeqIO

Entrez.email = 'nhepler@ucsd.edu'

accessions = {
'EU885762': ('>50', 'G'), 'DQ187010': ('1', 'A'), 'EU885763': ('>50', 'G'), 'FJ444215': ('>25', 'C'),
'HM215255': ('>50', 'A'), 'EU576299': ('2.5', 'B'), 'EU363851': ('>25', 'AE'), 'EU363850': ('10.12', 'AE'),
'EU513199': ('>50', 'AG'), 'FJ444059': ('>25', 'C'), 'HM215373': ('>25', 'AE'), 'HM215372': ('>25', 'AE'),
'HM215278': ('>50', 'C'), 'HM215279': ('>50', 'AC'), 'HM215274': ('2.31', 'AD'), 'HM215272': ('22.7', 'A'),
'HM215273': ('>25', 'AD'), 'EF210727': ('>50', 'B'), 'EF210726': ('>50', 'B'), 'EF210725': ('9.3', 'B'),
'HM215428': ('0.5', 'B'), 'FJ444437': ('>25', 'C'), 'HM215423': ('>50', 'B'), 'HM215422': ('>50', 'AE'),
'HM215421': ('>50', 'C'), 'HM215420': ('>50', 'B'), 'HM215427': ('>50', 'AE'), 'HM215426': ('2.3', 'BC'),
'HM215425': ('3.6', 'BC'), 'EF210728': ('0.9', 'B'), 'EU575786': ('>25', 'B'), 'AF004885': ('>50', 'A'),
'U08455':   ('0.2', 'C'), 'EU885764': ('>50', 'G'), 'HM215409': ('>50', 'AE'), 'EU885766': ('>50', 'BG'),
'EU363825': ('>25', 'B'), 'EU885760': ('>50', 'BG'), 'EU885761': ('>50', 'G'), 'FJ443670': ('>25', 'C'),
'EU576296': ('6.2', 'B'), 'EU575148': ('3.6', 'B'), 'HM215343': ('4.1', 'CD'), 'HM215340': ('>50', 'CD'),
'HM215341': ('>50', 'C'), 'HM215346': ('21.2', 'C'), 'HM215347': ('>50', 'A'), 'FJ444103': ('>25', 'C'),
'HM215345': ('>50', 'C'), 'HM215261': ('>50', 'AD'), 'HM215260': ('34.8', 'ACD'), 'HM215262': ('>50', 'C'),
'HM215265': ('>25', 'cpx'), 'HM215264': ('>25', 'AG'), 'HM215266': ('>25', 'A'), 'EF117259': ('2.5', 'BC'),
'EU123924': ('0.1', 'B'), 'HM215327': ('>50', 'D'), 'EU513188': ('>50', 'AG'), 'EU513189': ('>50', 'AG'),
'DQ388514': ('3.2', 'C'), 'DQ388515': ('19.9', 'C'), 'HM215399': ('>50', 'B'), 'HM215418': ('>50', 'AE'),
'HM215419': ('>50', 'AE'), 'HM215416': ('>50', 'C'), 'HM215417': ('>50', 'C'), 'EU513182': ('>50', 'AG'),
'HM215415': ('26.3', 'AE'), 'HM215412': ('41', 'C'), 'HM215413': ('>50', 'B'), 'EU513186': ('>50', 'AG'),
'EU513187': ('>50', 'AG'), 'AY423971': ('>50', 'C'), 'HM215298': ('>50', 'A'), 'HM215299': ('25', 'A'),
'FJ443744': ('>25', 'C'), 'HM215294': ('>50', 'AC'), 'HM215295': ('3.9', 'AC'), 'HM215296': ('0.11', 'CD'),
'HM215297': ('>50', 'CD'), 'HM215290': ('>25', 'AG'), 'HM215291': ('>25', 'AG'), 'HM215292': ('1.9', 'AG'),
'HM215293': ('>25', 'AG'), 'EU577190': ('1.9', 'B'), 'FJ444600': ('>25', 'C'), 'EU289202': ('1.1', 'B'),
'AY835434': ('>50', 'B'), 'HM215355': ('0.1', 'C'), 'HM215354': ('>50', 'C'), 'HM215357': ('9.89', 'D'),
'EU363829': ('>25', 'B'), 'HM215350': ('>25', 'A'), 'HM215352': ('>25', 'C'), 'DQ388516': ('3', 'C'),
'EF210734': ('>50', 'B'), 'DQ388517': ('>50', 'C'), 'FJ444529': ('19', 'C'), 'HM215401': ('8.8', 'BC'),
'HM215400': ('34.6', 'B'), 'HM215403': ('>50', 'C'), 'HM215402': ('4.8', 'BC'), 'HM215405': ('>50', 'BC'),
'HM215404': ('23.2', 'BC'), 'HM215407': ('>50', 'BC'), 'HM215406': ('7.4', 'BC'), 'EU513193': ('7.6', 'AG'),
'HM215408': ('5.3', 'C'), 'EU513191': ('>50', 'AG'), 'EU513190': ('>50', 'G'), 'EU513197': ('38.7', 'AG'),
'EU513196': ('>50', 'AG'), 'EU513195': ('>50', 'AG'), 'EU513194': ('>50', 'AG'), 'HM215306': ('>50', 'A'),
'EF042692': ('2.8', 'BC'), 'HM215289': ('>50', 'C'), 'HM215288': ('>50', 'ACD'), 'K03455': ('0.05', 'B'),
'FJ443808': ('>25', 'C'), 'EF117269': ('>50', 'C'), 'HM215283': ('2.4', 'D'), 'HM215282': ('>25', 'AG'),
'HM215281': ('>25', 'AG'), 'HM215280': ('12.9', 'AD'), 'HM215338': ('>50', 'C'), 'FJ444612': ('>25', 'C'),
'HM215414': ('>50', 'BC'), 'GQ855765': ('4.2', 'B'), 'GQ855764': ('>25', 'B'), 'EU289186': ('2', 'B'),
'EU289187': ('16.15', 'B'), 'EU289184': ('>25', 'B'), 'EU289185': ('11.1', 'B'), 'AY424079': ('>50', 'C'),
'EU289183': ('3.9', 'B'), 'HM215320': ('>50', 'C'), 'EU513184': ('>50', 'AG'), 'FJ444421': ('>25', 'C'),
'EU289188': ('4.71', 'B'), 'EU513185': ('>50', 'AG'), 'AY835442': ('2.4', 'B'), 'HM215410': ('>50', 'AE'),
'HM215332': ('>50', 'AC'), 'HM215411': ('4.6', 'C'), 'HM215331': ('>50', 'AC'), 'FJ496194': ('22.7', 'C'),
'AF407160': ('>50', 'A'), 'EU885759': ('>50', 'G'), 'EU577073': ('4.2', 'B'), 'HM215398': ('0.8', 'B'),
'EU575170': ('0.5', 'B'), 'AY835447': ('0.1', 'B'), 'EU289199': ('2.31', 'B'), 'EU289198': ('>25', 'B'),
'EF210729': ('>50', 'B'), 'HM215335': ('>50', 'C'), 'EU363845': ('>25', 'BC'), 'EU289191': ('>25', 'B'),
'EU289190': ('>25', 'B'), 'EU289193': ('1.2', 'B'), 'EU289192': ('>25', 'B'), 'EU289194': ('19.62', 'B'),
'EU289197': ('1.3', 'B'), 'EU289196': ('>25', 'B'), 'FJ444017': ('8.9', 'C'), 'FJ444395': ('14.8', 'C'),
'AY835448': ('0.5', 'B'), 'AY835449': ('0.7', 'B'), 'AY423984': ('25.9', 'C'), 'AY835443': ('>50', 'B'),
'AY835440': ('2.6', 'B'), 'AY835441': ('0.2', 'B'), 'AY835446': ('1.9', 'B'), 'HM215429': ('>25', 'AE'),
'AY835444': ('>50', 'B'), 'AY835445': ('>50', 'B'), 'EU575870': ('>25', 'B'), 'EU513198': ('3.6', 'AG'),
'EF117258': ('>50', 'BC'), 'AY424163': ('>50', 'C'), 'EU577213': ('0.6', 'B'), 'DQ411853': ('1', 'C'),
'EF117257': ('10.8', 'BC'), 'EF117256': ('>25', 'BC'), 'EF117255': ('>25', 'BC'), 'EF117254': ('>25', 'BC'),
'HM215328': ('>50', 'C'), 'HM215329': ('>50', 'CD'), 'FJ443999': ('11.3', 'C'), 'HM215386': ('>25', 'AE'),
'HM215367': ('>25', 'AE'), 'HM215389': ('>25', 'AE'), 'EU363826': ('1.45', 'B'), 'EU363827': ('>25', 'B'),
'FJ444384': ('>25', 'C'), 'FJ496204': ('>25', 'C'), 'AF407158': ('>50', 'A'), 'AF407156': ('>50', 'AD'),
'DQ422948': ('>50', 'C'), 'HM215304': ('>50', 'AC'), 'HM215305': ('>50', 'C'), 'AY835451': ('3.1', 'B'),
'AY835450': ('>50', 'B'), 'EU363828': ('>25', 'B'), 'AY835452': ('>50', 'B'), 'DQ411851': ('1.4', 'C'),
'EF117268': ('>50', 'C'), 'HM215321': ('>50', 'AC'), 'EF117266': ('>50', 'C'), 'EF117267': ('>50', 'C'),
'EF117264': ('>25', 'BC'), 'EF117265': ('>50', 'C'), 'EF117262': ('>25', 'BC'), 'EF117263': ('23.8', 'BC'),
'EF117260': ('>25', 'BC'), 'EF117261': ('>25', 'BC'), 'HM215307': ('>50', 'C'), 'AF063223': ('>25', 'AG'),
'HM215323': ('0.78', 'ACD'), 'EU363844': ('>25', 'BC'), 'EU166866': ('23.6', 'C'), 'HM215330': ('46.1', 'AC'),
'HM215397': ('>50', 'B'), 'EU363839': ('>25', 'BC'), 'EU363838': ('>25', 'BC'), 'HM215301': ('>50', 'AD'),
'U15121':   ('>25', 'C'), 'EU363831': ('7.01', 'BC'), 'EU363833': ('20.08', 'BC'), 'EU289189': ('>25', 'B'),
'EU363835': ('>25', 'BC'), 'EU363834': ('>25', 'BC'), 'EU363837': ('>25', 'BC'), 'EU363836': ('>25', 'BC'),
'HM215311': ('>50', 'C'), 'AY424138': ('>50', 'C'), 'HM215313': ('29.2', 'CD'), 'HM215312': ('0.1', 'A'),
'EU289201': ('2.79', 'B'), 'EU289200': ('3.1', 'B'), 'HM215337': ('>50', 'CD'), 'HM215319': ('>50', 'C'),
'HM215318': ('>50', 'C'), 'HM215253': ('>50', 'C'), 'AF286224': ('>25', 'C'), 'HM215257': ('>50', 'A'),
'EF117271': ('>50', 'C'), 'EF117270': ('>50', 'C'), 'EF117273': ('>50', 'C'), 'EF117272': ('25.9', 'C'),
'FJ444561': ('10.4', 'C'), 'DQ435684': ('>50', 'C'), 'DQ435683': ('20.4', 'C'), 'DQ435682': ('0.7', 'C'),
'FJ444325': ('1.62', 'C'), 'HM215336': ('0.8', 'C'), 'HM215310': ('>50', 'CD'), 'DQ318211': ('0.2', 'B'),
'HM215326': ('>50', 'C'), 'EU363848': ('>25', 'BC'), 'EU363849': ('>25', 'AE'), 'HM215431': ('>25', 'B'),
'DQ411854': ('0.2', 'C'), 'HM215315': ('11.7', 'AC'), 'EU363847': ('>25', 'BC'), 'DQ411850': ('0.2', 'C'),
'EU363841': ('1.15', 'BC'), 'DQ411852': ('0.8', 'C'), 'HM215314': ('>50', 'C'), 'HM215364': ('>25', 'BC'),
'HM215365': ('>25', 'B'), 'EU513183': ('>50', 'A/AG'), 'HM215361': ('>25', 'C'), 'EU885765': ('>50', 'G'),
'EF117274': ('4.9', 'C'), 'HM215316': ('>50', 'C'), 'FJ444553,': ('11.53', 'C'), 'FJ444047': ('>25', 'C'),
'HM215438': ('>25', 'H'), 'EF210735': ('>50', 'B'), 'AY835439': ('0.3', 'B'), 'AY835438': ('17.5', 'B'),
'EF210730': ('0.2', 'B'), 'EF210731': ('6.5', 'B'), 'EF210732': ('>50', 'B'), 'EF210733': ('>50', 'B'),
'HM215430': ('0.01', 'B'), 'AF407152': ('>50', 'A'), 'HM215432': ('>25', 'AE'), 'HM215433': ('>25', 'C'),
'EU363840': ('2.43', 'BC'), 'HM215435': ('>25', 'B'), 'HM215436': ('>25', 'AE'), 'HM215437': ('>25', 'C')
}

tmpfile = 'chavi.xml.tmp'

if os.path.exists(tmpfile):
    handle = open(tmpfile)
else:
    handle = Entrez.efetch(db='nucleotide', id=','.join(list(accessions.keys())), retmode='xml')
    tmp = open(tmpfile, 'w')
    print(handle.read(), file=tmp)
    tmp.close()
    handle = open(tmpfile)

records = Entrez.read(handle)

dbfile = 'chavi.sqlite3'

if os.path.exists(dbfile):
    os.unlink(dbfile)

conn = sqlite3.connect(dbfile)
curs = conn.cursor()

curs.execute('''CREATE TABLE 'GENO_REPORT' (GENO_REPORT_NO INTEGER PRIMARY KEY AUTOINCREMENT, ACCESSION_ID varchar(20) NOT NULL, SUBTYPE varchar(20) NOT NULL)''')
curs.execute('''CREATE TABLE 'SEQUENCE' (SEQUENCE_NO INTEGER PRIMARY KEY AUTOINCREMENT, ACCESSION_ID varchar(20) NOT NULL, RAW_SEQ text NOT NULL)''')
curs.execute('''CREATE TABLE 'NEUT' (NEUT_NO INTEGER PRIMARY KEY AUTOINCREMENT, ACCESSION_ID varchar(20) NOT NULL, ANTIBODY varchar(20) NOT NULL, IC50_STRING varchar(20) NOT NULL)''')

c = 1

for record in records:
    start, end = -1, -1
    id = record['GBSeq_primary-accession']
    features = record['GBSeq_feature-table']
    for feature in features:
        try:
            key = feature['GBFeature_key'].lower()
            if key != 'gene' and key != 'cds':
                continue
            quals = feature['GBFeature_quals']
            for qual in quals:
                name = qual['GBQualifier_name'].lower()
                value = qual['GBQualifier_value'].lower()[:3]
                if (name == 'gene' or name == 'note') and value == 'env':
                    start = int(feature['GBFeature_intervals'][0]['GBInterval_from']) - 1
                    end = int(feature['GBFeature_intervals'][0]['GBInterval_to']) # don't subtract one to include the last character
                    break
            if start != -1 or end != -1:
                break
        except IndexError:
            pass
        except KeyError:
            pass
    if start == -1 or end == -1:
        print(record)
        sys.exit(-1)
    seq = record['GBSeq_sequence'].upper()[start:end]
    if id in accessions:
        subtype = accessions[id][1]
        ic50 = accessions[id][0]
        curs.execute('INSERT INTO \'GENO_REPORT\' VALUES(\'%d\', \'%s\', \'%s\')' % (c, id, subtype))
        curs.execute('INSERT INTO \'SEQUENCE\' VALUES(\'%d\', \'%s\', \'%s\')' % (c, id, seq))
        curs.execute('INSERT INTO \'NEUT\' VALUES(\'%d\', \'%s\', \'B12\', \'%s\')' % (c, id, ic50))
        c += 1
    else:
        print(id, file=sys.stderr)

conn.commit()
curs.close()
try:
    conn.close()
except:
    pass

if os.path.exists(tmpfile):
    os.unlink(tmpfile)

sys.exit(0)
